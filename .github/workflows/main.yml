name: Build and Release EXE

on:
  push:
    tags:
      - 'v*'  # Triggers the action when a new version tag is pushed

jobs:
  build:
    runs-on: windows-latest  # Use a Linux runner (can also use windows-latest if needed)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13.x'  # Choose the Python version you need

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt5  # Adjust if you need other dependencies

    - name: Install pyinstaller
      run: pip install pyinstaller  # Install pyinstaller to compile the EXE

    - name: Compile Python code into EXE
      run: |
        pyinstaller --noconfirm --onefile --windowed --icon "lib\mDirt.ico" --add-data "src\ui.py;." --add-data "src\item_models.json;." --add-data "src\item_list.json;." --add-data "src\item_select.py;."  "src\main.py"

    - name: Create release
      uses: gh action: create-release@v1.10.0
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: 'Automated release created by GitHub Actions.'

    - name: Upload EXE to release
      uses: ncipollo/release-action@v1
      with:
        files: ./dist/your_script.exe  # Path to the compiled EXE
