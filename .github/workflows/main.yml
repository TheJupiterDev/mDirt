name: Build and Upload EXE to Release

on:
  release:
    types: [published, prereleased]  # Trigger on both published and prereleased events

jobs:
  build:
    runs-on: windows-latest  # Use a Windows runner
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13.x'  # Choose the Python version you need

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt5  # Adjust if you need other dependencies

    - name: Install pyinstaller
      run: pip install pyinstaller  # Install pyinstaller to compile the EXE

    - name: Compile Python code into EXE
      run: |
        pyinstaller --noconfirm --onefile --windowed --icon "lib\mDirt.ico" --add-data "src\ui.py;." --add-data "src\item_models.json;." --add-data "src\item_list.json;." --add-data "src\item_select.py;."  "src\main.py"

    - name: Create bin folder
      run: |
        New-Item -ItemType Directory -Force -Path ./bin  # Create the bin folder if it doesn't exist

    - name: Move EXE to bin folder
      run: |
        Move-Item -Path ./dist/main.exe -Destination ./bin/main.exe  # Move the EXE to the bin folder

    - name: Upload EXE to GitHub Release
      uses: gh actions/upload-release-asset@v1
      with:
        repository: ${{ github.repository }}
        tag: ${{ github.event.release.tag_name }}  # Get the tag name of the release
        asset_path: ./bin/main.exe  # Path to the EXE
        asset_name: main.exe  # Name of the asset for the release
        asset_content_type: application/octet-stream  # Set the correct content type
